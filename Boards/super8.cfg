################################################################################
#
#       @@\       @@@@@@@\   @@@@@@\  
#       @@ |      @@  __@@\ @@  __@@\ 
#       @@ |      @@ |  @@ |@@ /  @@ |
#       @@ |      @@ |  @@ |@@ |  @@ |
#       @@ |      @@ |  @@ |@@ |  @@ |
#       @@ |      @@ |  @@ |@@ |  @@ |
#       @@@@@@@@\ @@@@@@@  | @@@@@@  |
#       \________|\_______/  \______/ 
#                            
# 3D Printer Firmware Configuration
#
# This configuration file contains the basic settings for a stock
# LDO Voron 3D printer build. 
#  
# This file was generated for:
# LDO Voron 2.4 Rev C 300mm
################################################################################

[include mainsail.cfg]
[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

# This file contains common pin mappings for the Mellow Fly Super 8.
# To use this config, the firmware should be compiled for the STM32F407 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "8 MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the board with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm Mellow Fly Super 8 V1.0 TMC2130 SPI config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Hotend heater pin                    [extruder] section
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Stepper Z1 enable pin                [stepper_z1] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

##========================== Pin Definitions ========================
[board_pins super8]
aliases:
    # Heaters
    BED_OUT=PE5,
    HEAT0=PB0, HEAT1=PB1, HEAT2=PC7, HEAT3=PF7, HEAT4=PF6,

    # Thermisors
    BED_TEMP=PC1,
    HEAT0_TEMP=PF4, HEAT1_TEMP=PF5, HEAT2_TEMP=PF9, HEAT3_TEMP=PF10, HEAT4_TEMP=PC0, 

    # Fans
    FAN0=PA0, FAN1=PA1, FAN2=PA2, FAN3=PA3, FAN4=PA15, FAN5=PB11, FAN6=PB10, FAN7=PD12, FAN8=PD14, FAN9=PD15,

    # End stops
    X_STOP=PG12,  Y_STOP=PG11,  Z_STOP=PG9, E_STOP=PG10,

    # BL Touch
    SERVO=PC6, # BL Touch servo pin
    PROBE=PC3,  # BL Touch end stop pin

    # Neopixels
    RGB=PF8

aliases_drive0:
   DRIVE0_STEP_PIN =   PE2,
   DRIVE0_DIR_PIN =    PC5,
   DRIVE0_ENABLE_PIN = PF11,
   DRIVE0_UART_PIN =   PC4,
   DRIVE0_CS_PIN =     DRIVE0_UART_PIN,

aliases_drive1:
   DRIVE1_STEP_PIN =   PE3,
   DRIVE1_DIR_PIN =    PF13,
   DRIVE1_ENABLE_PIN = PF14,
   DRIVE1_UART_PIN =   PF12,
   DRIVE1_CS_PIN =     DRIVE1_UART_PIN,

aliases_drive2:
   DRIVE2_STEP_PIN =   PE4,
   DRIVE2_DIR_PIN =    PG0,
   DRIVE2_ENABLE_PIN = PG1,
   DRIVE2_UART_PIN =   PF15,
   DRIVE2_CS_PIN =     DRIVE2_UART_PIN,

aliases_drive3:
   DRIVE3_STEP_PIN =   PE14,
   DRIVE3_DIR_PIN =    PE8,
   DRIVE3_ENABLE_PIN = PE9,
   DRIVE3_UART_PIN =   PE7,
   DRIVE3_CS_PIN =     DRIVE3_UART_PIN,

aliases_drive4:
   DRIVE4_STEP_PIN =   PE15,
   DRIVE4_DIR_PIN =    PE11,
   DRIVE4_ENABLE_PIN = PF2,
   DRIVE4_UART_PIN =   PE10,
   DRIVE4_CS_PIN =     DRIVE4_UART_PIN,
   
aliases_drive5:
   DRIVE5_STEP_PIN =   PE1,
   DRIVE5_DIR_PIN =    PF0,
   DRIVE5_ENABLE_PIN = PC15,
   DRIVE5_UART_PIN =   PF1,
   DRIVE5_CS_PIN =     DRIVE5_UART_PIN,

aliases_drive6:
   DRIVE6_STEP_PIN =   PE0,
   DRIVE6_DIR_PIN =    PG3,
   DRIVE6_ENABLE_PIN = PG4,
   DRIVE6_UART_PIN =   PG2,
   DRIVE6_CS_PIN =     DRIVE6_UART_PIN,

aliases_drive7:
   DRIVE7_STEP_PIN =   PE6,
   DRIVE7_DIR_PIN =    PG6,
   DRIVE7_ENABLE_PIN = PG7,
   DRIVE7_UART_PIN =   PG5,
   DRIVE7_CS_PIN =     DRIVE7_UART_PIN,

aliases_exp1:
   EXP1_1=PE12, EXP1_3=PB2, EXP1_5=PC14, EXP1_7=PG14, EXP1_9=<GND>,
   EXP1_2=PE13, EXP1_4=PG8, EXP1_6=PC13, EXP1_8=PG13, EXP1_10=<5V>,

aliases_exp2:
   EXP2_1=PA6, EXP2_3=PB7, EXP2_5=PB6, EXP2_7=PG15,  EXP2_9=<GND>,
   EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<5V>

[mcu]
################################################################################
# Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
################################################################################
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_5A0034000250304235323120-if00
restart_method: command

[temperature_sensor super_8]
sensor_type: temperature_mcu

################################################################################
# Raspberry Pi MCU
################################################################################
[mcu rpi]
serial: /tmp/klipper_host_mcu

[temperature_sensor raspberry_pi]
sensor_type: temperature_host

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    100, 100, 20  # an example

################################################################################
#   Printer Settings
################################################################################

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

################################################################################
#   X/Y Stepper Settings
################################################################################

##  B Stepper - Left
##  Connected to DRIVE0
##  Endstop connected to IO0/DIAG0
[stepper_x]
step_pin: DRIVE0_STEP_PIN
dir_pin: DRIVE0_DIR_PIN
enable_pin: !DRIVE0_ENABLE_PIN
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: X_STOP
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 stepper_x]
#uart_pin: DRIVE0_UART_PIN
#interpolate: false
#run_current: 0.8
#sense_resistor: 0.110
#stealthchop_threshold: 0
[tmc2130 stepper_x]
cs_pin: DRIVE0_CS_PIN
spi_bus: spi3
interpolate: false
run_current: 0.8
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to DRIVE1
##  Endstop connected to IO1/DIAG1
[stepper_y]
step_pin: DRIVE1_STEP_PIN
dir_pin: DRIVE1_DIR_PIN
enable_pin: !DRIVE1_ENABLE_PIN
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: Y_STOP
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 stepper_y]
#uart_pin: DRIVE1_UART_PIN
#interpolate: false
#run_current: 0.8
#sense_resistor: 0.110
#stealthchop_threshold: 0
[tmc2130 stepper_y]
cs_pin: DRIVE1_CS_PIN
spi_bus: spi3
interpolate: false
run_current: 0.8
stealthchop_threshold: 0
 
################################################################################
#   Z Steppers Settings
################################################################################

## Z0 Stepper - Front Left
##  Connected to DRIVE3
##  Endstop connected to IO3/DIAG3
[stepper_z]
step_pin: DRIVE3_STEP_PIN
dir_pin: DRIVE3_DIR_PIN
enable_pin: !DRIVE3_ENABLE_PIN
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: Z_STOP
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 210

##  Uncomment below for 300mm build
position_max: 260

##  Uncomment below for 350mm build
#position_max: 310

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 stepper_z]
#uart_pin: DRIVE3_UART_PIN
#interpolate: false
#run_current: 0.8
#sense_resistor: 0.110
#stealthchop_threshold: 0
[tmc2130 stepper_z]
cs_pin: DRIVE3_CS_PIN
spi_bus: spi3
interpolate: false
run_current: 0.8
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to DRIVE4
[stepper_z1]
step_pin: DRIVE4_STEP_PIN
dir_pin: !DRIVE4_DIR_PIN
enable_pin: !DRIVE4_ENABLE_PIN
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 stepper_z1]
#uart_pin: DRIVE4_UART_PIN
#interpolate: false
#run_current: 0.8
#sense_resistor: 0.110
#stealthchop_threshold: 0
[tmc2130 stepper_z1]
cs_pin: DRIVE4_CS_PIN
spi_bus: spi3
interpolate: false
run_current: 0.8
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to DRIVE5
[stepper_z2]
step_pin: DRIVE5_STEP_PIN
dir_pin: DRIVE5_DIR_PIN
enable_pin: !DRIVE5_ENABLE_PIN
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 stepper_z2]
#uart_pin: DRIVE5_UART_PIN
#interpolate: false
#run_current: 0.8
#sense_resistor: 0.110
#stealthchop_threshold: 0
[tmc2130 stepper_z2]
cs_pin: DRIVE5_CS_PIN
spi_bus: spi3
interpolate: false
run_current: 0.8
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to DRIVE6
[stepper_z3]
step_pin: DRIVE6_STEP_PIN
dir_pin: !DRIVE6_DIR_PIN
enable_pin: !DRIVE6_ENABLE_PIN
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 stepper_z3]
#uart_pin: DRIVE6_UART_PIN
#interpolate: false
#run_current: 0.8
#sense_resistor: 0.110
#stealthchop_threshold: 0
[tmc2130 stepper_z3]
cs_pin: DRIVE6_CS_PIN
spi_bus: spi3
interpolate: false
run_current: 0.8
stealthchop_threshold: 0

################################################################################
#   Extruder
################################################################################

##  Connected to DRIVE7
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: DRIVE7_STEP_PIN
dir_pin: !DRIVE7_DIR_PIN
enable_pin: !DRIVE7_ENABLE_PIN
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: HEAT0
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: HEAT0_TEMP
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
control = pid                  ## UPDATE THIS VALUE AFTER PID TUNE
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 extruder]
#uart_pin: DRIVE7_UART_PIN
#interpolate: false
#run_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 0
[tmc2130 extruder]
cs_pin: DRIVE7_CS_PIN
spi_bus: spi3
interpolate: false
run_current: 0.5
stealthchop_threshold: 0

################################################################################
#   Bed Heater
################################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: BED_OUT
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: BED_TEMP
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid                   ## UPDATE THIS VALUE AFTER PID TUNE
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

################################################################################
#   Probe
################################################################################

##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
##  Probe connected to DIAG_7
[probe]
pin: PROBE
x_offset: 0
y_offset: 25.0
z_offset: 0
speed: 10.0
samples: 5
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

################################################################################
#   Fan Control
################################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: FAN0
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: FAN1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: FAN2
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5

##  Exhaust fan - FAN3
#[heater_fan exhaust_fan]
#pin: FAN3
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

################################################################################
#   LED Control
################################################################################

[output_pin case_lights]
## Chamber Lighting - FAN5
pin: FAN5
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

[neopixel sb_leds]
## Stealthburner lighting - RGB
pin: RGB
chain_count: 3
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 0.0

################################################################################
#   Homing and Gantry Adjustment Routines
################################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:-10,-10
speed:100
z_hop:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]
#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
gantry_corners:
   -60,-10
   360,370
##  Probe points
points:
   50,25
   50,225
   250,225
   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
#gantry_corners:
#   -60,-10
#   410,420
##  Probe points
#points:
#   50,25
#   50,275
#   300,275
#   300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

################################################################################
#   Displays
################################################################################

##  Uncomment the display that you have.
#--------------------------------------------------------------------

##  RepRapDiscount 128x64 Full Graphic Smart Controller
#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_3, ^EXP2_5
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

##  mini12864 LCD Display
#[display]
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#click_pin: ^!EXP1_2
#encoder_pins: ^EXP2_5, ^EXP2_3
#contrast: 63
#spi_bus: spi1
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

##  To control Neopixel RGB in mini12864 display
#[neopixel btt_mini12864]
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


################################################################################
#   Macros
################################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
